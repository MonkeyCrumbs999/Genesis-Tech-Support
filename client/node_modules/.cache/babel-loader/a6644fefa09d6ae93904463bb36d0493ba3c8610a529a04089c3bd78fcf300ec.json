{"ast":null,"code":"export const login = async (username, password, setUser, setError) => {\n  try {\n    const response = await fetch(\"https://genesis-tech-support-2159e5e25391.herokuapp.com/users/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const result = await response.json();\n    if (result) {\n      if (typeof setError === \"function\") {\n        if (!result.user) {\n          setError(result.message);\n        }\n      }\n      if (typeof setUser === \"function\") {\n        setUser(result.user);\n      }\n      localStorage.setItem(\"user\", JSON.stringify(result.user));\n    }\n    return true;\n  } catch (error) {\n    if (typeof setError === \"function\") {\n      setError(\"Error signing in\");\n    }\n    return false;\n  }\n};\n// Function to handle register requests\nexport const register = async (username, email, password, firstName, lastName, address, phone, zipCode, setUser, setError) => {\n  try {\n    console.log({\n      username,\n      email,\n      password,\n      firstName,\n      lastName,\n      address,\n      phone,\n      zipCode\n    });\n    const response = await fetch(\"https://genesis-tech-support-2159e5e25391.herokuapp.com/users/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password,\n        firstName,\n        lastName,\n        address,\n        phone,\n        zipCode\n      })\n    });\n    console.log(\"Response status:\", response.status);\n    const result = await response.json();\n    console.log(\"Response data:\", result);\n    if (!response.ok) {\n      setError(result.message);\n      console.error(result.message);\n      return false;\n    }\n    setUser(result.user);\n    localStorage.setItem(\"user\", JSON.stringify(result.user));\n    return true;\n  } catch (error) {\n    console.error(\"Error registering:\", error);\n    setError(\"Error registering\");\n    return false;\n  }\n};\n\n// Function to handle logout requests\nexport const logout = setUser => {\n  setUser(null);\n  localStorage.removeItem(\"user\");\n};","map":{"version":3,"names":["login","username","password","setUser","setError","response","fetch","method","headers","body","JSON","stringify","result","json","user","message","localStorage","setItem","error","register","email","firstName","lastName","address","phone","zipCode","console","log","status","ok","logout","removeItem"],"sources":["C:/Users/webwa/Desktop/Genesis/Website/genesis-tech-support/client/src/services/auth.js"],"sourcesContent":["export const login = async (username, password, setUser, setError) => {\r\n  try {\r\n    const response = await fetch(\r\n      \"https://genesis-tech-support-2159e5e25391.herokuapp.com/users/login\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      }\r\n    );\r\n\r\n    const result = await response.json();\r\n\r\n    if (result) {\r\n      if (typeof setError === \"function\") {\r\n        if (!result.user) {\r\n          setError(result.message);\r\n        }\r\n      }\r\n\r\n      if (typeof setUser === \"function\") {\r\n        setUser(result.user);\r\n      }\r\n      localStorage.setItem(\"user\", JSON.stringify(result.user));\r\n    }\r\n    return true;\r\n  } catch (error) {\r\n    if (typeof setError === \"function\") {\r\n      setError(\"Error signing in\");\r\n    }\r\n    return false;\r\n  }\r\n};\r\n// Function to handle register requests\r\nexport const register = async (\r\n  username,\r\n  email,\r\n  password,\r\n  firstName,\r\n  lastName,\r\n  address,\r\n  phone,\r\n  zipCode,\r\n  setUser,\r\n  setError\r\n) => {\r\n  try {\r\n    console.log({\r\n      username,\r\n      email,\r\n      password,\r\n      firstName,\r\n      lastName,\r\n      address,\r\n      phone,\r\n      zipCode,\r\n    });\r\n\r\n    const response = await fetch(\r\n      \"https://genesis-tech-support-2159e5e25391.herokuapp.com/users/register\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username,\r\n          email,\r\n          password,\r\n          firstName,\r\n          lastName,\r\n          address,\r\n          phone,\r\n          zipCode,\r\n        }),\r\n      }\r\n    );\r\n\r\n    console.log(\"Response status:\", response.status);\r\n    const result = await response.json();\r\n\r\n    console.log(\"Response data:\", result);\r\n\r\n    if (!response.ok) {\r\n      setError(result.message);\r\n      console.error(result.message);\r\n      return false;\r\n    }\r\n\r\n    setUser(result.user);\r\n    localStorage.setItem(\"user\", JSON.stringify(result.user));\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error registering:\", error);\r\n    setError(\"Error registering\");\r\n    return false;\r\n  }\r\n};\r\n\r\n// Function to handle logout requests\r\nexport const logout = (setUser) => {\r\n  setUser(null);\r\n  localStorage.removeItem(\"user\");\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}