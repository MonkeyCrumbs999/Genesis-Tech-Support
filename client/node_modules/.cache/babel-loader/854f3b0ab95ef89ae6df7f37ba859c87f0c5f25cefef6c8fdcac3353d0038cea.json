{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\webwa\\\\Desktop\\\\Genesis\\\\Website\\\\genesis-tech-support\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport { login, register, logout } from \"../services/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(() => {\n    const localUser = localStorage.getItem(\"user\");\n    return localUser && localUser !== \"undefined\" ? JSON.parse(localUser) : null;\n  });\n  const [error, setError] = useState(null);\n  const loginCallback = async (username, password) => {\n    const result = await login(username, password, setUser, setError);\n    if (result === false) {\n      //you will handle error visibility in component\n      //setError is already invoked in login service\n    }\n  };\n  const registerCallback = async (username, email, password, firstName, lastName, address, phone, zipCode) => {\n    const result = await register(username, email, password, firstName, lastName, address, phone, zipCode, setUser, setError);\n    if (result === false) {\n      //you will handle error visibility in component\n      //setError is already invoked in register service\n    }\n  };\n  const logoutCallback = () => logout(setUser);\n  const resetError = () => setError(null);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login: loginCallback,\n      register: registerCallback,\n      logout: logoutCallback,\n      error,\n      resetError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"oSdNSdEOaQoqgmB3YVQVAMqBQt8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","login","register","logout","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","user","setUser","localUser","localStorage","getItem","JSON","parse","error","setError","loginCallback","username","password","result","registerCallback","email","firstName","lastName","address","phone","zipCode","logoutCallback","resetError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/webwa/Desktop/Genesis/Website/genesis-tech-support/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport { login, register, logout } from \"../services/auth\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(() => {\r\n    const localUser = localStorage.getItem(\"user\");\r\n    return localUser && localUser !== \"undefined\"\r\n      ? JSON.parse(localUser)\r\n      : null;\r\n  });\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  const loginCallback = async (username, password) => {\r\n    const result = await login(username, password, setUser, setError);\r\n\r\n    if (result === false) {\r\n      //you will handle error visibility in component\r\n      //setError is already invoked in login service\r\n    }\r\n  };\r\n\r\n  const registerCallback = async (\r\n    username,\r\n    email,\r\n    password,\r\n    firstName,\r\n    lastName,\r\n    address,\r\n    phone,\r\n    zipCode\r\n  ) => {\r\n    const result = await register(\r\n      username,\r\n      email,\r\n      password,\r\n      firstName,\r\n      lastName,\r\n      address,\r\n      phone,\r\n      zipCode,\r\n      setUser,\r\n      setError\r\n    );\r\n    if (result === false) {\r\n      //you will handle error visibility in component\r\n      //setError is already invoked in register service\r\n    }\r\n  };\r\n\r\n  const logoutCallback = () => logout(setUser);\r\n\r\n  const resetError = () => setError(null);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        login: loginCallback,\r\n        register: registerCallback,\r\n        logout: logoutCallback,\r\n        error,\r\n        resetError,\r\n      }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,SAASC,KAAK,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,MAAM;IACrC,MAAMa,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,OAAOF,SAAS,IAAIA,SAAS,KAAK,WAAW,GACzCG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GACrB,IAAI;EACV,CAAC,CAAC;EAEF,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMoB,aAAa,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAClD,MAAMC,MAAM,GAAG,MAAMtB,KAAK,CAACoB,QAAQ,EAAEC,QAAQ,EAAEV,OAAO,EAAEO,QAAQ,CAAC;IAEjE,IAAII,MAAM,KAAK,KAAK,EAAE;MACpB;MACA;IAAA;EAEJ,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAAA,CACvBH,QAAQ,EACRI,KAAK,EACLH,QAAQ,EACRI,SAAS,EACTC,QAAQ,EACRC,OAAO,EACPC,KAAK,EACLC,OAAO,KACJ;IACH,MAAMP,MAAM,GAAG,MAAMrB,QAAQ,CAC3BmB,QAAQ,EACRI,KAAK,EACLH,QAAQ,EACRI,SAAS,EACTC,QAAQ,EACRC,OAAO,EACPC,KAAK,EACLC,OAAO,EACPlB,OAAO,EACPO,QACF,CAAC;IACD,IAAII,MAAM,KAAK,KAAK,EAAE;MACpB;MACA;IAAA;EAEJ,CAAC;EAED,MAAMQ,cAAc,GAAGA,CAAA,KAAM5B,MAAM,CAACS,OAAO,CAAC;EAE5C,MAAMoB,UAAU,GAAGA,CAAA,KAAMb,QAAQ,CAAC,IAAI,CAAC;EAEvC,oBACEd,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IACnBC,KAAK,EAAE;MACLvB,IAAI;MACJV,KAAK,EAAEmB,aAAa;MACpBlB,QAAQ,EAAEsB,gBAAgB;MAC1BrB,MAAM,EAAE4B,cAAc;MACtBb,KAAK;MACLc;IACF,CAAE;IAAAtB,QAAA,EACDA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC7B,EAAA,CAhEWF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}